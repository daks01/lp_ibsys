---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Container from "../ui/Container.astro";
import Dialog from "../ui/Dialog.astro";
import Section from "../ui/Section.astro";

const fullDevCycleEntries = (await getCollection("fulldevcycle")).sort(
	(a, b) => a.data.step - b.data.step,
);

const { ...props } = Astro.props;
---

<Section {...props}>
  <Fragment slot="after-footer">
    <div class="sticky-container">
      <div class="sticky">
        <Container>
          <p class="lead">
            <span class="hightlight">
              В&nbsp;отличие от&nbsp;многих аутсорс компаний, мы&nbsp;реализуем
              <span class="tag">полный цикл</span> разработки проектов. От&nbsp;анализа запроса
              клиента и&nbsp;предложений по&nbsp;оптимизации бизнес-процессов до&nbsp;передачи
              реализованного проекта на&nbsp;поддержку во&nbsp;внутреннюю команду клиента.
            </span>
          </p>
        </Container>
        <ul class="work-list" data-scroll>
          {
            fullDevCycleEntries.map(async (item) => {
              const { Content } = await item.render();
              return (
                <li class="work-list__item">
                  <button
                    type="button"
                    class="card"
                    onclick={`window["${item.slug}"]?.showModal();`}
                  >
                    <div class="card__img-wrap">
                      <Image
                        src={item.data.cover}
                        class="card__img"
                        alt=""
                        role="presentation"
                        loading="eager"
                      />
                    </div>
                    <span class="card__title">{item.data.title}</span>
                  </button>
                  <Dialog id={item.slug} title={item.data.title} class="invert">
                    <Content />

                    <footer class="step-list">
                      {fullDevCycleEntries.map((entry) => (
                        <span
                          onclick={`
                          window["${item.slug}"]?.close();
                          window["${entry.slug}"]?.showModal();
                        `}
                          class:list={[
                            "step-list__item",
                            { active: entry.data.step === item.data.step },
                          ]}
                        >
                          #{entry.data.step}
                        </span>
                      ))}
                      <span class="step-list__item">&nbsp;</span>
                    </footer>
                  </Dialog>
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
  </Fragment>
</Section>

<style>
  @import "/src/assets/css/_custom-media.css";

  .section {
    padding: var(--80px) 0;
  }

  .lead {
    margin: 0 0 var(--60px);
  }

  /* hightlight animation */
  .hightlight{
    --color: var(--text-color);
    --underline-width: 1lh;
    --underline-block-width: calc(var(--1px) * 10000);
    --underline-color: var(--text-grey);
    --underline-transition: 5s;
    --finish-fill: var(--text-color);
    --accent: var(--color-gray);
    --fill: var(--text-color);

    background-image:
      /* First one is the highlight */
      linear-gradient(90deg, transparent calc(100% - 8ch), var(--accent) calc(100%  - 8ch)),
      linear-gradient(90deg, var(--fill), var(--fill)),
      linear-gradient(90deg, var(--underline-color), var(--underline-color));
    background-size:
      var(--underline-block-width) var(--underline-width),
      var(--underline-block-width) var(--underline-width),
      100% var(--underline-width);
    background-repeat: no-repeat;
    background-position-x: 0;
    background-position-y: 100%;
    background-clip: text;
    color: var(--finish-fill);
  }

  @supports (animation-timeline: scroll()) {
    @media (prefers-reduced-motion: no-preference) {
      .sticky-container {
        height: calc(var(--1px) * 2000);
        view-timeline-name: --section;
      }
      .sticky {
        position: sticky;
        top: var(--60px)
      }
      @media screen and (--screen-phone) {
        .sticky-container {
          height: calc(var(--1px) * 1000);
        }
        .sticky {
          top: var(--36px)
        }
      }
      
      .hightlight {
        background-position-x:
          calc(var(--underline-block-width) * -1),
          calc(var(--underline-block-width) * -1),
          0;
        color: transparent;
        animation-name: fill-up, color-in;
        animation-fill-mode: both;
        animation-timing-function: linear;
        animation-timeline: --section;
        animation-range: entry 100% cover 80%, cover 80% exit 0%;
      }

      @keyframes fill-up {
        to { background-position-x: 0, 0, 0; }
      }

      @keyframes color-in {
        to { color: var(--finish-fill); }
      }
    }
  }


  .tag {
    color: var(--text-white);
    background-color: var(--color-product);
    padding: 0 var(--30px) var(--8px);
    line-height: 1;
    border-radius: var(--60px);
    display: inline-block;
  }

  .work-list {
    counter-reset: my-awesome-counter;
    display: flex;
    flex-wrap: nowrap;
    -webkit-overflow-scrolling: touch;
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    scroll-padding-left: var(--gutter);
    scroll-padding-right: var(--gutter);
    scrollbar-width: none;
    padding: 0 var(--gutter) 0;
    margin: 0 auto;
    gap: var(--30px);
    max-width: 100vw;
  }
  @media screen and (--screen-large-desktop) {
    .work-list {
      --padding-left: calc((100vw - var(--container-width-in-px) + var(--gutter) * 2) / 2);
      padding-left: var(--padding-left);
      scroll-padding-left: var(--padding-left);
    }
  }
  .work-list__item {
    counter-increment: my-awesome-counter;
    padding: 0;
    margin: 0;
    list-style-type: none;
    scroll-snap-align: start;
  }

  .card {
    border: none;
    font-family: inherit;
    padding: 0;
    background-color: blue;
    display: flex;
    flex-direction: column;
    justify-content: end;
    height: calc(var(--1px) * 480);
    border-radius: var(--36px);
    width: max-content;
    position: relative;
    margin: 0 0 calc(var(--1px) * 130);
    cursor: pointer;
    &:hover img,
    &:focus img {
      transform: scale(1.15);
    }

    &:before {
      content: "";
      position: absolute;
      bottom: calc(var(--110px) * -1);
      transform: translateY(50%);
      width: calc(100% + var(--30px));
      height: calc(var(--1px) * 3);
      background-color: var(--color-product);
    }
    &:after {
      content: "#" counter(my-awesome-counter);
      position: absolute;
      left: 50%;
      transform: translate(-50%, 50%);
      bottom: calc(var(--110px) * -1);
      font-size: var(--heading-4);
      padding: 0 var(--16px);
      line-height: 1;
      background-color: var(--color-white);
      color: var(--color-product);
    }
  }
  .card__img-wrap {
    border-radius: var(--36px);
    overflow: hidden;
  }
  .card__img {
    height: calc(var(--1px) * 480);
    width: max-content;
    transition: transform 0.15s ease;
  }
  .card__title {
    --height: calc(var(--1px) * 130);
    display: flex;
    align-items: end;
    justify-content: center;
    font-size: var(--heading-5);
    color: var(--text-white);
    text-align: center;
    padding: 0 var(--50px) calc(var(--1px) * 45);
    margin-top: calc(var(--height) * -1);
    height: var(--height);
    background: linear-gradient(
      180deg,
      rgba(20, 88, 228, 0) 0%,
      rgba(0, 59, 194, 0.8) 91.44%
    );
    backdrop-filter: blur(2px);
    white-space: nowrap;
    border-radius: 0 0 var(--36px) var(--36px);
    width: 100%;
  }

  .step-list {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    margin-top: var(--60px);

    &:after {
      content: "";
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0;
      width: 100%;
      height: calc(var(--1px) * 3);
      background-color: var(--color-product);
      z-index: -1;
    }
  }
  .step-list__item {
    color: var(--color-product);
    width: var(--80px);
    height: var(--80px);
    border-radius: var(--80px);
    font-size: var(--heading-4);
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--background-color, --color-white);
    cursor: pointer;
    &:last-child {
      width: var(--16px);
      height: var(--16px);
      background-color: var(--color-product);
      cursor: default;
      pointer-events: none;
    }
    &.active {
      background-color: var(--color-product);
      color: var(--text-white);
      cursor: default;
      pointer-events: none;
    }
  }
  @media screen and (--screen-phone) {
    
    .section {
      padding: var(--36px) 0;
    }
    .tag {
      padding: 0 var(--8px) var(--4px);
      margin-left: calc(var(--8px)* -1);
    }
    .lead {
      margin-bottom: var(--30px);
    }
    .card {
      width: 76vw;
      height: calc(var(--1px) * 360);
      margin-bottom: var(--80px);
    }
    .card::before,
    .card::after {
      bottom: calc(var(--40px)* -1);
    }
    .card::before{
      height: var(--2px);
    }
    .card::after {
      font-size: calc(var(--1px) * 32);
    }
    .card__title {
      white-space: normal;
    }
    .card__img-wrap {
      height: 100%;
      width: 100%;
    }
    .card__img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
    
    .step-list {
      display: none;
    }
  }
</style>

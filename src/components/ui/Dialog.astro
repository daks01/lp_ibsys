---
const { id, title, width = 1120, class: className, ...props } = Astro.props;
---

<!-- How to open --><!-- <button onclick={`window.${id}?.showModal()`}>Открыть</button> -->
<dialog
  id={id}
  class:list={["dialog", className]}
  role="dialog"
  aria-modal="true"
  aria-labelledby={`dialog-${id}-title`}
  {...props}
>
  <header class="dialog__header">
    <span class="dialog__title h4" id={`dialog-${id}-title`}>{title}</span>
    <form method="dialog" class="dialog__close-form">
      <button
        type="submit"
        class="button-close"
        aria-label="Закрыть"
      >
        <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="24.2285" y="3.07734" width="1" height="31" transform="rotate(45 24.2285 3.07734)" fill="currentColor"/>
          <rect x="24.9355" y="24.9976" width="1" height="31" transform="rotate(135 24.9355 24.9976)" fill="currentColor"/>
        </svg>
        
      </button>
    </form>
  </header>
  <div class="dialog__body">
    <slot />
  </div>
</dialog>

<script>
  import dialogPolyfill from "dialog-polyfill";

  document.addEventListener("DOMContentLoaded", () => {
    init();
  });

  function init() {
    const dialogList = document.querySelectorAll("dialog");
    const isOutsideClick = (element, event) => {
      const rect = element.getBoundingClientRect();
      const result =
        event.clientY < rect.top ||
        event.clientY > rect.bottom ||
        event.clientX < rect.left ||
        event.clientX > rect.right;
      return result;
    };

    if (!dialogList.length) {
      return;
    }

    [...dialogList].forEach((dialog) => {
      dialogPolyfill.registerDialog(dialog);

      dialog.addEventListener("click", (event) => {
        if (isOutsideClick(dialog, event)) {
          dialog.close();
        }
      });
    });
  }
</script>

<style define:vars={{ width }}>
  @import "/src/assets/css/_custom-media.css";
  @keyframes animate-top {
    from {
      transform: translate(0, -5vh);
      opacity: 0;
    }
    to {
      transform: translate(0, 0);
      opacity: 1;
    }
  }
  .dialog {
    --dialog-gutter: var(--70px);
    --dialog-width: var(--width);
  }
  .dialog {
    position: fixed;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    display: block;
    left: 0;
    right: 0;
    max-height: calc(100vh - var(--90px));
    width: calc(var(--1px) * var(--dialog-width));
    max-width: calc(100vw - var(--gutter) * 2);
    margin: var(--90px) auto auto;
    padding: 0;
    background-color: var(--color-white);
    border: none;
    border-radius: var(--30px);
    animation-name: animate-top;
    animation-duration: 0.4s;
    color: var(--text-color);

    &:not([open]) {
      display: none;
    }

    &::backdrop,
    & + .backdrop {
      position: fixed;
      top: 0px;
      right: 0px;
      bottom: 0px;
      left: 0px;
      background: rgba(21, 30, 52, 0.8);
      backdrop-filter: blur(120);
    }
  }
  body:has(dialog[open]) {
    overflow: hidden;
  }
  .dialog__header {
    padding: var(--dialog-gutter) var(--dialog-gutter) var(--40px);
    position: relative;
    /* background-color: var(--color-white);
    box-shadow: 0 -1px 0 1px var(--color-white);
    position: sticky;
    z-index: 1; */
    top: 0;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }
  .dialog__body {
    margin: 0 var(--dialog-gutter) var(--dialog-gutter);
  }
  .dialog__title {
    margin: 0;
  }
  .dialog__close-form {
    flex-shrink: 0;
    margin: calc(var(--dialog-gutter) * -1) calc(var(--dialog-gutter) * -1) 0 0;
  }
  .button-close {
    color: var(--color-product);
    padding: var(--30px);
    background: none;
    border: none;
    cursor: pointer;
    transition: color 0.15s ease;

    &:hover {
      color: var(--color-black);
    }
  }
  @media screen and (--screen-phone) {
    .dialog {
      --dialog-gutter: var(--16px);
    }
    .dialog {
      max-width: 100vw;
      max-height: 100%;
      margin: 0;
    }
    .dialog__header {
      padding: var(--dialog-gutter);
    }
    .dialog__title {
      word-break: break-word;
      font-size: calc(var(--1px) * 20);
    }
    .button-close {
      padding: var(--16px) var(--16px) 0 var(--16px);
      svg {
        width: calc(var(--1px) * 24);
        width: calc(var(--1px) * 24);
      }
    }
  }
</style>
